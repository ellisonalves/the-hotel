openapi: 3.0.3
info:
  title: The Hotel API - OpenAPI 3.0
  description: |-
    Simple Api in order to test the opengenerator plugin features.
  contact:
    email: ellisonalves@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://localhost:8080/api/v1
tags:
  - name: booking
    description: Manage booking in the hotel
  - name: rooms
    description: Manage the hotel rooms
  - name: guests
    description: Manage the guests in the hotel
paths:
  /bookings:
    post:
      tags:
        - bookings
      summary: Creates a new booking
      description: Creates a booking in the hotel for a given customers and room for a determine period of time√ò
      operationId: createBooking
      requestBody:
        description: Required data for creating a booking
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBookingRequest"
        required: true
      responses:
        "201":
          description: Successful operation
        "400":
          description: Invalid request
        "404":
          description: Pet not found
        "405":
          description: Validation exception
  /rooms:
    post:
      tags:
        - rooms
      summary: Creates a new room
      description: Adds a new room to the hotel database
      operationId: createRoom
      requestBody:
        description: Required information for adding a room
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoomRequest"
        required: true
      responses:
        "201":
          description: Room created
        "400":
          description: Invalid request
    get:
      tags:
        - rooms
      summary: Finds all rooms
      description: Find all existing rooms in the hotel
      operationId: findAll
      responses:
        "200":
          description: List of the rooms in the hotel
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomList"
  /rooms/{door_number}:
    get:
      tags:
        - rooms
      summary: Finds a room by its door number
      description: Find a room by door number
      operationId: findByDoorNumber
      parameters:
        - name: door_number
          in: path
          description: door number of the room
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomList"
  /rooms/{room_id}:
    put:
      tags:
        - rooms
      summary: Updates a room data
      description: Updates a room data
      operationId: updateRoom
      parameters:
        - name: room_id
          in: path
          description: id of the room
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Room's data that is available for changing
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomData"
      responses:
        "204":
          description: Room was updated correctly

components:
  schemas:
    RoomList:
      type: object
      properties:
        rooms:
          type: array
          items:
            $ref: "#/components/schemas/RoomData"
    RoomData:
      type: object
      properties:
        id:
          type: string
          format: uuid
        door_number:
          type: string
        room_type:
          enum:
            - STANDARD
            - DOUBLE
            - PRESIDENT
        amount_per_night:
          $ref: "#/components/schemas/MoneyData"
      required:
        - door_number
        - room_type
        - amount_per_night
    MoneyData:
      type: object
      properties:
        amount:
          type: number
          format: decimal
        currency_code:
          type: string
      required:
        - amount
        - currency_code
    CreateBookingRequest:
      type: object
      properties:
        guest_id:
          type: string
          format: uuid
        room_id:
          type: string
          format: uuid
        from:
          type: string
          format: date-time
        until:
          type: string
          format: date-time
      required:
        - guest_id
        - room_id
        - from
        - until
    CreateRoomRequest:
      type: object
      properties:
        door_number:
          type: string
        room_type:
          enum:
            - STANDARD
            - DOUBLE
            - PRESIDENT
        amount_per_night:
          $ref: "#/components/schemas/MoneyData"
      required:
        - door_number
        - room_type
        - amount_per_night
